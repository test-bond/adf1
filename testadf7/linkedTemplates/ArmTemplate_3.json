{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "testadf7"
		},
		"OnPremEmpCSVs_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'OnPremEmpCSVs'"
		},
		"OnPremSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'OnPremSqlServer'"
		},
		"OnPremSqlServer_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'OnPremSqlServer'"
		},
		"SqlServer1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SqlServer1'"
		},
		"SqlServer1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SqlServer1'"
		},
		"SqlServerOnPrem_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SqlServerOnPrem'"
		},
		"SqlServerOnPrem_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SqlServerOnPrem'"
		},
		"onpremfile_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'onpremfile'"
		},
		"OnPremEmpCSVs_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "c:\\msft\\azure\\sqldb\\files"
		},
		"OnPremEmpCSVs_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "northamerica\\vishinde"
		},
		"OnPremSqlServer_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "northamerica\\vishinde"
		},
		"SqlServer1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "northamerica\\vishinde"
		},
		"SqlServerOnPrem_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "northamerica\\vishinde"
		},
		"onpremfile_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "C:\\MSFT\\ADF\\DataFlow\\IMDB\\title.basics.tsv"
		},
		"onpremfile_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "northamerica\\vishinde"
		},
		"FileShare1_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "titlebasics.tsv"
		},
		"FileShare1_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": ""
		},
		"OnPremDestJSON_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": ".json"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/OnPremEmpCSVs')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('OnPremEmpCSVs_properties_typeProperties_host')]",
					"userId": "[parameters('OnPremEmpCSVs_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('OnPremEmpCSVs_password')]"
					}
				},
				"connectVia": {
					"referenceName": "[parameters('integrationRuntime_SelfIR1')]",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/OnPremSqlServer')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('OnPremSqlServer_connectionString')]",
					"userName": "[parameters('OnPremSqlServer_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('OnPremSqlServer_password')]"
					}
				},
				"connectVia": {
					"referenceName": "[parameters('integrationRuntime_SelfIR1')]",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SqlServer1_connectionString')]",
					"userName": "[parameters('SqlServer1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SqlServer1_password')]"
					}
				},
				"connectVia": {
					"referenceName": "[parameters('integrationRuntime_SelfIR1')]",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerOnPrem')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SqlServerOnPrem_connectionString')]",
					"userName": "[parameters('SqlServerOnPrem_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SqlServerOnPrem_password')]"
					}
				},
				"connectVia": {
					"referenceName": "[parameters('integrationRuntime_SelfIR1')]",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/onpremfile')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('onpremfile_properties_typeProperties_host')]",
					"userId": "[parameters('onpremfile_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('onpremfile_password')]"
					}
				},
				"connectVia": {
					"referenceName": "[parameters('integrationRuntime_SelfIR1')]",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CTWithSP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.TableList",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "StoredProceduretoUpdateChangeTrackingActivity",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Stored Procedure1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[sp_update_emp_CT]",
										"storedProcedureParameters": {
											"versionId": {
												"value": {
													"value": "@activity('LookupCurrentChangeTrackingVersion').output.firstRow.ChgTrkVer",
													"type": "Expression"
												},
												"type": "Int64"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "LookupTableChangeTrackingVersion",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlSource",
											"sqlReaderQuery": {
												"value": "SELECT Change_Tracking_Version\nFROM etl.Change_Tracking_Version\nWHERE Table_Name = '@{item().TblName}'",
												"type": "Expression"
											}
										},
										"dataset": {
											"referenceName": "ETLChangeTrackingVersionDS",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "LookupCurrentChangeTrackingVersion",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlSource",
											"sqlReaderQuery": "SELECT CHANGE_TRACKING_CURRENT_VERSION() AS ChgTrkVer"
										},
										"dataset": {
											"referenceName": "SourceSQL",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "InsertStaging",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "LookupTableChangeTrackingVersion",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "LookupCurrentChangeTrackingVersion",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[sp_insert_staging_emp_table]",
										"storedProcedureParameters": {
											"ParamBeginCTVersion": {
												"value": {
													"value": "@activity('LookupTableChangeTrackingVersion').output.firstRow.Change_Tracking_Version",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"ParamEndVersion": {
												"value": {
													"value": "@activity('LookupCurrentChangeTrackingVersion').output.firstRow.ChgTrkVer",
													"type": "Expression"
												},
												"type": "Int64"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "CopyStagingToTarget",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "InsertStaging",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlSource"
										},
										"sink": {
											"type": "SqlSink",
											"writeBatchSize": 10000
										},
										"enableStaging": false,
										"dataIntegrationUnits": 0,
										"translator": {
											"type": "TabularTranslator",
											"columnMappings": {
												"EmpID": "EmpID",
												"FirstName": "FirstName",
												"MiddleName": "MiddleName",
												"LastName": "LastName",
												"Operation": "OPERATION"
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SrcStagingEmp",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DestinationStagingEmp",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Stored Procedure1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "CopyStagingToTarget",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[sp_upsert_emp_table]"
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"parameters": {
					"TableList": {
						"type": "Array"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyBlobtoSQLDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "AzureBlob2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DWLoadData-udf1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_6m0",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dbo.AnalyzeCampaigns"
							},
							{
								"name": "Destination",
								"value": "dbo.AnalyzeCampaigns"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource"
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "polystore",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Region",
											"type": "String"
										},
										"sink": {
											"name": "Region",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Country",
											"type": "String"
										},
										"sink": {
											"name": "Country",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Product Category",
											"type": "String"
										},
										"sink": {
											"name": "Product Category",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Campaign ID",
											"type": "Double"
										},
										"sink": {
											"name": "Campaign ID",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Campaign Name",
											"type": "String"
										},
										"sink": {
											"name": "Campaign Name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Qualification",
											"type": "String"
										},
										"sink": {
											"name": "Qualification",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String"
										},
										"sink": {
											"name": "Status",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Qualification Number",
											"type": "Double"
										},
										"sink": {
											"name": "Qualification Number",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Lead Status",
											"type": "String"
										},
										"sink": {
											"name": "Lead Status",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Leads",
											"type": "Double"
										},
										"sink": {
											"name": "Leads",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Cost",
											"type": "Double"
										},
										"sink": {
											"name": "Cost",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Marketing Cost",
											"type": "Double"
										},
										"sink": {
											"name": "Marketing Cost",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Revenue",
											"type": "Double"
										},
										"sink": {
											"name": "Revenue",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Profit",
											"type": "Double"
										},
										"sink": {
											"name": "Profit",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "ROI",
											"type": "Double"
										},
										"sink": {
											"name": "ROI",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Lead Generation (%)",
											"type": "Double"
										},
										"sink": {
											"name": "Lead Generation (%)",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Campaign Tactic",
											"type": "String"
										},
										"sink": {
											"name": "Campaign Tactic",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Customer Segment",
											"type": "String"
										},
										"sink": {
											"name": "Customer Segment",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Revenue Target",
											"type": "Double"
										},
										"sink": {
											"name": "Revenue Target",
											"type": "Double"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_6m0",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_6m0",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FromBlobToSQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.fileList",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy Data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BlobSource",
											"recursive": true
										},
										"sink": {
											"type": "SqlDWSink",
											"writeBatchSize": 10000,
											"allowPolyBase": true,
											"polyBaseSettings": {
												"rejectValue": 0,
												"rejectType": "value",
												"useTypeDefault": true
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "FilesStored",
												"type": "LinkedServiceReference"
											},
											"path": "backup"
										},
										"dataIntegrationUnits": 0
									},
									"inputs": [
										{
											"referenceName": "FilesStored",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DWTarget",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"fileList": {
						"type": "Array",
						"defaultValue": [
							{
								"filename": "customer.csv",
								"TableSchema": "dbo",
								"TableName": "Customer"
							},
							{
								"filename": "product.csv",
								"TableSchema": "dbo",
								"TableName": "Product"
							}
						]
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FromSQLToBlob')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.tableslist",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy Data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"sqlReaderQuery": {
												"value": "SELECT * FROM @{item().name}",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "BlobSink"
										},
										"enableStaging": false,
										"dataIntegrationUnits": 0
									},
									"inputs": [
										{
											"referenceName": "LookupDW",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureBlob_Sink_DS",
											"type": "DatasetReference",
											"parameters": {
												"azuresqltblname": "@{item().name}",
												"mon": "@{item().mon}",
												"dt": "@{item().dt}"
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"tableslist": {
						"type": "Object"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FullCopyPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "InitialFullLoad",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "DSTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "BlobPush",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/IncrementalCopyPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupLastChangeTrackingVersionActivity",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource"
							},
							"dataset": {
								"referenceName": "CTCTbl",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LookupCurrentChangeTrackingVersionActivity",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT CHANGE_TRACKING_CURRENT_VERSION() as CurrentChangeTrackingVersion"
							},
							"dataset": {
								"referenceName": "DSTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "IncrementalCopyActivity",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LookupLastChangeTrackingVersionActivity",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LookupCurrentChangeTrackingVersionActivity",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "select data_source_table.PersonID,data_source_table.Name,data_source_table.Age, CT.SYS_CHANGE_VERSION, SYS_CHANGE_OPERATION from data_source_table RIGHT OUTER JOIN CHANGETABLE(CHANGES data_source_table, @{activity('LookupLastChangeTrackingVersionActivity').output.firstRow.SYS_CHANGE_VERSION}) as CT on data_source_table.PersonID = CT.PersonID where CT.SYS_CHANGE_VERSION <= @{activity('LookupCurrentChangeTrackingVersionActivity').output.firstRow.CurrentChangeTrackingVersion}",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "DSTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "BlobPush",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "StoredProceduretoUpdateChangeTrackingActivity",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "IncrementalCopyActivity",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Update_ChangeTracking_Version]",
							"storedProcedureParameters": {
								"CurrentTrackingVersion": {
									"value": {
										"value": "@activity('LookupCurrentChangeTrackingVersionActivity').output.firstRow.CurrentChangeTrackingVersion",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"TableName": {
									"value": {
										"value": "@activity('LookupLastChangeTrackingVersionActivity').output.firstRow.TableName",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SqlDatabase",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/IncrementalWatermarkPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.TableList",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "LookupOldWaterMarkValue",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlSource",
											"sqlReaderQuery": {
												"value": "select * from watermarktable where TableName  =  '@{item().TABLE_NAME}'",
												"type": "Expression"
											}
										},
										"dataset": {
											"referenceName": "WatermarkDataset",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "LookupNewWaterMarkValue",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlSource",
											"sqlReaderQuery": {
												"value": "select MAX(@{item().WaterMark_Column}) as NewWatermarkvalue from @{item().TABLE_NAME}",
												"type": "Expression"
											}
										},
										"dataset": {
											"referenceName": "WatermarkDataset",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "IncrementalCopyActivity",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "LookupOldWaterMarkValue",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "LookupNewWaterMarkValue",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlSource",
											"sqlReaderQuery": {
												"value": "select * from @{item().TABLE_NAME} where @{item().WaterMark_Column} > '@{activity('LookupOldWaterMarkValue').output.firstRow.WatermarkValue}' and @{item().WaterMark_Column} <= '@{activity('LookupNewWaterMarkValue').output.firstRow.NewWatermarkvalue}'",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "SqlSink",
											"writeBatchSize": 10000,
											"sqlWriterStoredProcedureName": {
												"value": "@{item().StoredProcedureNameForMergeOperation}",
												"type": "Expression"
											}
										},
										"enableStaging": false,
										"dataIntegrationUnits": 0
									},
									"inputs": [
										{
											"referenceName": "SourceSQL",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DestinationSQL",
											"type": "DatasetReference",
											"parameters": {
												"SinkTableName": {
													"value": "@{item().TABLE_NAME}",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "StoredProceduretoWriteWatermarkActivity",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "IncrementalCopyActivity",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[sp_write_watermark]",
										"storedProcedureParameters": {
											"LastModifiedtime": {
												"value": {
													"value": "@utcnow()",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"TableName": {
												"value": {
													"value": "@{activity('LookupOldWaterMarkValue').output.firstRow.TableName}",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SqlDatabase",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"parameters": {
					"TableList": {
						"type": "Array"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PolybaseBlobtoDW')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PolyTest",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"sink": {
								"type": "SqlDWSink",
								"writeBatchSize": 10000,
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "AzureBlob1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlDWTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupfromControlTbl",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "select convert(varchar(20), LastRUN_DTS, 120) as LastRUNDTS\nfrom STAGING.CONTROL_TRACK\nwhere table_name = 'MBR_DIM'"
							},
							"dataset": {
								"referenceName": "AzureSqlDWStgControl",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Copy Data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LookupfromControlTbl",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": {
									"value": "select * from STAGING.CONTROL_TRACK\nwhere LastRun_DTS = '@{activity('LookupfromControlTbl').output.firstRow.LastRUNDTS}'",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "AzureSqlDWStgControl",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestControlTrack2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SaleTxnText1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SqlDWSaleTxmTbl1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline4')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SrcBlob1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "c2s2dest",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sqldwpolybasetest')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "AzureSqlDWStgTbl",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dwoutput",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FileShare1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "onpremfile",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "FileShare",
				"typeProperties": {
					"fileName": "[parameters('FileShare1_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('FileShare1_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/onpremfile')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OnPremDestJSON')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OnPremCSVtoJSON",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "FileShare",
				"typeProperties": {
					"format": {
						"type": "JsonFormat",
						"filePattern": "setOfObjects"
					},
					"fileName": "[parameters('OnPremDestJSON_properties_typeProperties_fileName')]"
				}
			},
			"dependsOn": []
		}
	]
}