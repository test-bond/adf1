{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "testadf7"
		},
		"integrationRuntime_SSISIR": {
			"type": "string",
			"metadata": "Integration runtime name",
			"defaultValue": "SSISIR"
		},
		"integrationRuntime_SelfIR1": {
			"type": "string",
			"metadata": "Integration runtime name",
			"defaultValue": "SelfIR1"
		},
		"ADLSForHive_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ADLSForHive'"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureBlobStorage2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage2'"
		},
		"AzureSqlDW7_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDW7'"
		},
		"AzureSqlDW89_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDW89'"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'"
		},
		"CosmosDb1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'CosmosDb1'"
		},
		"DWTarget_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'DWTarget'"
		},
		"Databricks_LS_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'Databricks_LS'"
		},
		"FilesStored_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'FilesStored'"
		},
		"HDIHiveLS_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'HDIHiveLS'"
		},
		"OnPremCSVtoJSON_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'OnPremCSVtoJSON'"
		},
		"OnPremCsvs_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'OnPremCsvs'"
		},
		"OnPremEmpCSVs_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'OnPremEmpCSVs'"
		},
		"OnPremSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'OnPremSqlServer'"
		},
		"OnPremSqlServer_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'OnPremSqlServer'"
		},
		"SqlDatabase_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SqlDatabase'"
		},
		"SqlServer1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SqlServer1'"
		},
		"SqlServer1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SqlServer1'"
		},
		"SqlServerOnPrem_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SqlServerOnPrem'"
		},
		"SqlServerOnPrem_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SqlServerOnPrem'"
		},
		"onpremfile_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'onpremfile'"
		},
		"polystore_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'polystore'"
		},
		"sql7_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'sql7'"
		},
		"teststore_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'teststore'"
		},
		"cs2c2store_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'cs2c2store'"
		},
		"AzureBlob1_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": ""
		},
		"AzureBlob1_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "xel"
		},
		"AzureBlob2_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "test1.csv"
		},
		"AzureBlob2_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "sqldbload/"
		},
		"AzureBlob_Sink_DS_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "@concat(dataset().azuresqltblname,dataset().dt)"
		},
		"AzureBlob_Sink_DS_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "@concat('myfolder/',dataset().mon)"
		},
		"BlobPush_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "@CONCAT('Incremental-', pipeline().RunId, '.txt')"
		},
		"BlobPush_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "incremental"
		},
		"FileShare1_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "titlebasics.tsv"
		},
		"FileShare1_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": ""
		},
		"FilesStored_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "@{item().filename}"
		},
		"FilesStored_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "adftest"
		},
		"OnPremDestJSON_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": ".json"
		},
		"restsink_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": ""
		},
		"restsink_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "test"
		},
		"ADLSForHive_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://testhdistore7.dfs.core.windows.net"
		},
		"HDIHiveLS_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "admin"
		},
		"OnPremCSVtoJSON_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "c:\\csv"
		},
		"OnPremCSVtoJSON_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "northamerica\\vishinde"
		},
		"OnPremCsvs_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "C:\\MSFT\\Azure\\OpenHack\\VanArsdel"
		},
		"OnPremCsvs_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "northamerica\\vishinde"
		},
		"OnPremEmpCSVs_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "c:\\msft\\azure\\sqldb\\files"
		},
		"OnPremEmpCSVs_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "northamerica\\vishinde"
		},
		"OnPremSqlServer_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "northamerica\\vishinde"
		},
		"SqlServer1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "northamerica\\vishinde"
		},
		"SqlServerOnPrem_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "northamerica\\vishinde"
		},
		"onpremfile_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "C:\\MSFT\\ADF\\DataFlow\\IMDB\\title.basics.tsv"
		},
		"onpremfile_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "northamerica\\vishinde"
		},
		"SSISIR_properties_typeProperties_ssisProperties_catalogInfo_catalogServerEndpoint": {
			"type": "string",
			"defaultValue": "sqlsrv7.database.windows.net"
		},
		"SSISIR_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminUserName": {
			"type": "string",
			"defaultValue": "dataarch"
		},
		"SSISIR_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminPassword": {
			"type": "secureString"
		},
		"SSISIR_properties_typeProperties_ssisProperties_customSetupScriptProperties_sasToken": {
			"type": "secureString"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/7zipOnPremFileShareTest')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute SSIS Package",
						"type": "ExecuteSSISPackage",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"packageLocation": {
								"packagePath": "Proj1/ISProject/Package.dtsx",
								"type": "SSISDB"
							},
							"environmentPath": null,
							"connectVia": {
								"referenceName": "SSISIR",
								"type": "IntegrationRuntimeReference"
							},
							"executionCredential": {
								"domain": "contoso",
								"userName": "dataarch",
								"password": {
									"type": "SecureString",
									"value": "**********"
								}
							},
							"loggingLevel": "Basic",
							"projectConnectionManagers": {},
							"packageConnectionManagers": {}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/', parameters('integrationRuntime_SSISIR'))]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZFilesSSISIR')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute SSIS Package1",
						"type": "ExecuteSSISPackage",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"packageLocation": {
								"packagePath": "Proj1/ISProject/AzFilesPackage.dtsx",
								"type": "SSISDB"
							},
							"environmentPath": null,
							"connectVia": {
								"referenceName": "SSISIR",
								"type": "IntegrationRuntimeReference"
							},
							"loggingLevel": "Basic",
							"projectConnectionManagers": {},
							"packageConnectionManagers": {}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/', parameters('integrationRuntime_SSISIR'))]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CTWithSP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.TableList",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "StoredProceduretoUpdateChangeTrackingActivity",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Stored Procedure1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[sp_update_emp_CT]",
										"storedProcedureParameters": {
											"versionId": {
												"value": {
													"value": "@activity('LookupCurrentChangeTrackingVersion').output.firstRow.ChgTrkVer",
													"type": "Expression"
												},
												"type": "Int64"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "LookupTableChangeTrackingVersion",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlSource",
											"sqlReaderQuery": {
												"value": "SELECT Change_Tracking_Version\nFROM etl.Change_Tracking_Version\nWHERE Table_Name = '@{item().TblName}'",
												"type": "Expression"
											}
										},
										"dataset": {
											"referenceName": "ETLChangeTrackingVersionDS",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "LookupCurrentChangeTrackingVersion",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlSource",
											"sqlReaderQuery": "SELECT CHANGE_TRACKING_CURRENT_VERSION() AS ChgTrkVer"
										},
										"dataset": {
											"referenceName": "SourceSQL",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "InsertStaging",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "LookupTableChangeTrackingVersion",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "LookupCurrentChangeTrackingVersion",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[sp_insert_staging_emp_table]",
										"storedProcedureParameters": {
											"ParamBeginCTVersion": {
												"value": {
													"value": "@activity('LookupTableChangeTrackingVersion').output.firstRow.Change_Tracking_Version",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"ParamEndVersion": {
												"value": {
													"value": "@activity('LookupCurrentChangeTrackingVersion').output.firstRow.ChgTrkVer",
													"type": "Expression"
												},
												"type": "Int64"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "CopyStagingToTarget",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "InsertStaging",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlSource"
										},
										"sink": {
											"type": "SqlSink",
											"writeBatchSize": 10000
										},
										"enableStaging": false,
										"dataIntegrationUnits": 0,
										"translator": {
											"type": "TabularTranslator",
											"columnMappings": {
												"EmpID": "EmpID",
												"FirstName": "FirstName",
												"MiddleName": "MiddleName",
												"LastName": "LastName",
												"Operation": "OPERATION"
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SrcStagingEmp",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DestinationStagingEmp",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Stored Procedure1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "CopyStagingToTarget",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[sp_upsert_emp_table]"
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"parameters": {
					"TableList": {
						"type": "Array"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlDatabase')]",
				"[concat(variables('factoryId'), '/datasets/ETLChangeTrackingVersionDS')]",
				"[concat(variables('factoryId'), '/datasets/SourceSQL')]",
				"[concat(variables('factoryId'), '/datasets/SrcStagingEmp')]",
				"[concat(variables('factoryId'), '/datasets/DestinationStagingEmp')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConvertCsvtoJSON')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "FileSystemSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "OnPremTestSCV",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "OnPremDestJSON",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/OnPremTestSCV')]",
				"[concat(variables('factoryId'), '/datasets/OnPremDestJSON')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyBlobtoSQLDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "AzureBlob2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureBlob2')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyOnPremRental')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach_eqo",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.cw_items",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy_eqo",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{item().source.tableName}"
										},
										{
											"name": "Destination",
											"value": "/@{item().destination.fileName}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "SourceDataset_eqo",
											"type": "DatasetReference",
											"parameters": {
												"cw_tableName": "@item().source.tableName"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DestinationDataset_eqo",
											"type": "DatasetReference",
											"parameters": {
												"cw_fileName": "@item().destination.fileName"
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"cw_items": {
						"type": "Array",
						"defaultValue": [
							{
								"source": {
									"tableName": "[[dbo].[Actors]"
								},
								"destination": {
									"fileName": "dbo.Actors.csv"
								}
							},
							{
								"source": {
									"tableName": "[[dbo].[Customers]"
								},
								"destination": {
									"fileName": "dbo.Customers.csv"
								}
							},
							{
								"source": {
									"tableName": "[[dbo].[MovieActors]"
								},
								"destination": {
									"fileName": "dbo.MovieActors.csv"
								}
							},
							{
								"source": {
									"tableName": "[[dbo].[Movies]"
								},
								"destination": {
									"fileName": "dbo.Movies.csv"
								}
							},
							{
								"source": {
									"tableName": "[[dbo].[OnlineMovieMappings]"
								},
								"destination": {
									"fileName": "dbo.OnlineMovieMappings.csv"
								}
							},
							{
								"source": {
									"tableName": "[[dbo].[Transactions]"
								},
								"destination": {
									"fileName": "dbo.Transactions.csv"
								}
							}
						]
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_eqo')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_eqo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyOnPremSQLToSQLDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "OnPremSqlServerTbl",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureBlob1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/OnPremSqlServerTbl')]",
				"[concat(variables('factoryId'), '/datasets/AzureBlob1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DWLoadData-udf1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_6m0",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dbo.AnalyzeCampaigns"
							},
							{
								"name": "Destination",
								"value": "dbo.AnalyzeCampaigns"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource"
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "polystore",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Region",
											"type": "String"
										},
										"sink": {
											"name": "Region",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Country",
											"type": "String"
										},
										"sink": {
											"name": "Country",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Product Category",
											"type": "String"
										},
										"sink": {
											"name": "Product Category",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Campaign ID",
											"type": "Double"
										},
										"sink": {
											"name": "Campaign ID",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Campaign Name",
											"type": "String"
										},
										"sink": {
											"name": "Campaign Name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Qualification",
											"type": "String"
										},
										"sink": {
											"name": "Qualification",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String"
										},
										"sink": {
											"name": "Status",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Qualification Number",
											"type": "Double"
										},
										"sink": {
											"name": "Qualification Number",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Lead Status",
											"type": "String"
										},
										"sink": {
											"name": "Lead Status",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Leads",
											"type": "Double"
										},
										"sink": {
											"name": "Leads",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Cost",
											"type": "Double"
										},
										"sink": {
											"name": "Cost",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Marketing Cost",
											"type": "Double"
										},
										"sink": {
											"name": "Marketing Cost",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Revenue",
											"type": "Double"
										},
										"sink": {
											"name": "Revenue",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Profit",
											"type": "Double"
										},
										"sink": {
											"name": "Profit",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "ROI",
											"type": "Double"
										},
										"sink": {
											"name": "ROI",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Lead Generation (%)",
											"type": "Double"
										},
										"sink": {
											"name": "Lead Generation (%)",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Campaign Tactic",
											"type": "String"
										},
										"sink": {
											"name": "Campaign Tactic",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Customer Segment",
											"type": "String"
										},
										"sink": {
											"name": "Customer Segment",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Revenue Target",
											"type": "Double"
										},
										"sink": {
											"name": "Revenue Target",
											"type": "Double"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_6m0",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_6m0",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_6m0')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_6m0')]",
				"[concat(variables('factoryId'), '/linkedServices/polystore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Data Flow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ADFlow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "ADF-Join",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Ratings": {},
									"Movies": {},
									"sink1": {}
								}
							},
							"staging": {}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/ADF-Join')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FromBlobToSQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.fileList",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy Data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BlobSource",
											"recursive": true
										},
										"sink": {
											"type": "SqlDWSink",
											"writeBatchSize": 10000,
											"allowPolyBase": true,
											"polyBaseSettings": {
												"rejectValue": 0,
												"rejectType": "value",
												"useTypeDefault": true
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "FilesStored",
												"type": "LinkedServiceReference"
											},
											"path": "backup"
										},
										"dataIntegrationUnits": 0
									},
									"inputs": [
										{
											"referenceName": "FilesStored",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DWTarget",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"fileList": {
						"type": "Array",
						"defaultValue": [
							{
								"filename": "customer.csv",
								"TableSchema": "dbo",
								"TableName": "Customer"
							},
							{
								"filename": "product.csv",
								"TableSchema": "dbo",
								"TableName": "Product"
							}
						]
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/FilesStored')]",
				"[concat(variables('factoryId'), '/datasets/DWTarget')]",
				"[concat(variables('factoryId'), '/linkedServices/FilesStored')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FromSQLToBlob')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.tableslist",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy Data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"sqlReaderQuery": {
												"value": "SELECT * FROM @{item().name}",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "BlobSink"
										},
										"enableStaging": false,
										"dataIntegrationUnits": 0
									},
									"inputs": [
										{
											"referenceName": "LookupDW",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureBlob_Sink_DS",
											"type": "DatasetReference",
											"parameters": {
												"azuresqltblname": "@{item().name}",
												"mon": "@{item().mon}",
												"dt": "@{item().dt}"
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"tableslist": {
						"type": "Object"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/LookupDW')]",
				"[concat(variables('factoryId'), '/datasets/AzureBlob_Sink_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FullCopyPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "InitialFullLoad",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "DSTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "BlobPush",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DSTable')]",
				"[concat(variables('factoryId'), '/datasets/BlobPush')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IfPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ControlLookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": {
									"value": "select tblname\nfrom dbo.lookuptbl \nwhere monthupdated = @{pipeline().parameters.month}",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "ControlLookupDS",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "ControlLookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@{equals(activity('ControlLookup').output.firstRow.tblname,'alltbls')}",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "RunLookupPipeline",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "LookupTblsAndExecute",
											"type": "PipelineReference"
										},
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"month": {
						"type": "String",
						"defaultValue": "1"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ControlLookupDS')]",
				"[concat(variables('factoryId'), '/pipelines/LookupTblsAndExecute')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IncrementalCopyPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupLastChangeTrackingVersionActivity",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource"
							},
							"dataset": {
								"referenceName": "CTCTbl",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LookupCurrentChangeTrackingVersionActivity",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT CHANGE_TRACKING_CURRENT_VERSION() as CurrentChangeTrackingVersion"
							},
							"dataset": {
								"referenceName": "DSTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "IncrementalCopyActivity",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LookupLastChangeTrackingVersionActivity",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LookupCurrentChangeTrackingVersionActivity",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "select data_source_table.PersonID,data_source_table.Name,data_source_table.Age, CT.SYS_CHANGE_VERSION, SYS_CHANGE_OPERATION from data_source_table RIGHT OUTER JOIN CHANGETABLE(CHANGES data_source_table, @{activity('LookupLastChangeTrackingVersionActivity').output.firstRow.SYS_CHANGE_VERSION}) as CT on data_source_table.PersonID = CT.PersonID where CT.SYS_CHANGE_VERSION <= @{activity('LookupCurrentChangeTrackingVersionActivity').output.firstRow.CurrentChangeTrackingVersion}",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "DSTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "BlobPush",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "StoredProceduretoUpdateChangeTrackingActivity",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "IncrementalCopyActivity",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Update_ChangeTracking_Version]",
							"storedProcedureParameters": {
								"CurrentTrackingVersion": {
									"value": {
										"value": "@activity('LookupCurrentChangeTrackingVersionActivity').output.firstRow.CurrentChangeTrackingVersion",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"TableName": {
									"value": {
										"value": "@activity('LookupLastChangeTrackingVersionActivity').output.firstRow.TableName",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SqlDatabase",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CTCTbl')]",
				"[concat(variables('factoryId'), '/datasets/DSTable')]",
				"[concat(variables('factoryId'), '/datasets/BlobPush')]",
				"[concat(variables('factoryId'), '/linkedServices/SqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IncrementalWatermarkPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.TableList",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "LookupOldWaterMarkValue",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlSource",
											"sqlReaderQuery": {
												"value": "select * from watermarktable where TableName  =  '@{item().TABLE_NAME}'",
												"type": "Expression"
											}
										},
										"dataset": {
											"referenceName": "WatermarkDataset",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "LookupNewWaterMarkValue",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlSource",
											"sqlReaderQuery": {
												"value": "select MAX(@{item().WaterMark_Column}) as NewWatermarkvalue from @{item().TABLE_NAME}",
												"type": "Expression"
											}
										},
										"dataset": {
											"referenceName": "WatermarkDataset",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "IncrementalCopyActivity",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "LookupOldWaterMarkValue",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "LookupNewWaterMarkValue",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlSource",
											"sqlReaderQuery": {
												"value": "select * from @{item().TABLE_NAME} where @{item().WaterMark_Column} > '@{activity('LookupOldWaterMarkValue').output.firstRow.WatermarkValue}' and @{item().WaterMark_Column} <= '@{activity('LookupNewWaterMarkValue').output.firstRow.NewWatermarkvalue}'",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "SqlSink",
											"writeBatchSize": 10000,
											"sqlWriterStoredProcedureName": {
												"value": "@{item().StoredProcedureNameForMergeOperation}",
												"type": "Expression"
											}
										},
										"enableStaging": false,
										"dataIntegrationUnits": 0
									},
									"inputs": [
										{
											"referenceName": "SourceSQL",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DestinationSQL",
											"type": "DatasetReference",
											"parameters": {
												"SinkTableName": {
													"value": "@{item().TABLE_NAME}",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "StoredProceduretoWriteWatermarkActivity",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "IncrementalCopyActivity",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[sp_write_watermark]",
										"storedProcedureParameters": {
											"LastModifiedtime": {
												"value": {
													"value": "@utcnow()",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"TableName": {
												"value": {
													"value": "@{activity('LookupOldWaterMarkValue').output.firstRow.TableName}",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SqlDatabase",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"parameters": {
					"TableList": {
						"type": "Array"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/WatermarkDataset')]",
				"[concat(variables('factoryId'), '/datasets/SourceSQL')]",
				"[concat(variables('factoryId'), '/datasets/DestinationSQL')]",
				"[concat(variables('factoryId'), '/linkedServices/SqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LookupTblsAndExecute')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "SELECT name, month(getdate()) as mon,convert(varchar(11), getdate()) as dt FROM sys.tables\nWHERE name LIKE '%test%'"
							},
							"dataset": {
								"referenceName": "LookupDW",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "FromSQLToBlob",
								"type": "PipelineReference"
							},
							"parameters": {
								"tableslist": {
									"value": "@activity('Lookup1').output.value",
									"type": "Expression"
								}
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/LookupDW')]",
				"[concat(variables('factoryId'), '/pipelines/FromSQLToBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PolybaseBlobtoDW')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PolyTest",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"sink": {
								"type": "SqlDWSink",
								"writeBatchSize": 10000,
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "AzureBlob1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlDWTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureBlob1')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlDWTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WebActivitywithIFCondition')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://reqres.in/api/users",
							"method": "POST",
							"headers": {},
							"body": {
								"name": "morpheus",
								"job": "leader"
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Web1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('Web1').output.name,'test1')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Stored Procedure1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Update_TestTbl]",
										"storedProcedureParameters": {
											"teststr": {
												"value": {
													"value": "@activity('Web1').output.name",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "sql7",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sql7')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copyfiles')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "FileSystemSource",
								"recursive": false
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "FileShare1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SaveFile",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/FileShare1')]",
				"[concat(variables('factoryId'), '/datasets/SaveFile')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ADFlow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "ADF-Join",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Ratings": {},
									"Movies": {},
									"sink1": {}
								}
							},
							"staging": {}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/ADF-Join')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupfromControlTbl",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "select convert(varchar(20), LastRUN_DTS, 120) as LastRUNDTS\nfrom STAGING.CONTROL_TRACK\nwhere table_name = 'MBR_DIM'"
							},
							"dataset": {
								"referenceName": "AzureSqlDWStgControl",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Copy Data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LookupfromControlTbl",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": {
									"value": "select * from STAGING.CONTROL_TRACK\nwhere LastRun_DTS = '@{activity('LookupfromControlTbl').output.firstRow.LastRUNDTS}'",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "AzureSqlDWStgControl",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestControlTrack2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlDWStgControl')]",
				"[concat(variables('factoryId'), '/datasets/DestControlTrack2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SaleTxnText1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SqlDWSaleTxmTbl1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SaleTxnText1')]",
				"[concat(variables('factoryId'), '/datasets/SqlDWSaleTxmTbl1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sqldwpolybasetest')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "AzureSqlDWStgTbl",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dwoutput",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlDWStgTbl')]",
				"[concat(variables('factoryId'), '/datasets/dwoutput')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlob1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": "|",
						"rowDelimiter": "",
						"nullValue": "",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"fileName": "[parameters('AzureBlob1_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('AzureBlob1_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlob2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"fileName": "[parameters('AzureBlob2_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('AzureBlob2_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlob_Sink_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FilesStored",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"azuresqltblname": {
						"type": "String",
						"defaultValue": "@{dataset().azuresqltblname}"
					},
					"mon": {
						"type": "String",
						"defaultValue": "@{dataset().mon}"
					},
					"dt": {
						"type": "String",
						"defaultValue": "@{dataset().dt}"
					}
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "JsonFormat",
						"filePattern": "setOfObjects"
					},
					"fileName": {
						"value": "[parameters('AzureBlob_Sink_DS_properties_typeProperties_fileName')]",
						"type": "Expression"
					},
					"folderPath": {
						"value": "[parameters('AzureBlob_Sink_DS_properties_typeProperties_folderPath')]",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/FilesStored')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDWStgControl')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDW7",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"typeProperties": {
					"tableName": "[[staging].[CONTROL_TRACK]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDW7')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDWStgTbl')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDW7",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"tableName": "[[staging].[DLY_SALE_TXN_FCT3]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDW7')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDWTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDW89",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"typeProperties": {
					"tableName": "[[STG].[dimUSFIPSCodes]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDW89')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql7",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "test1",
						"type": "String"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[test1]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sql7')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql7",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "DepartmentID",
						"type": "Int16"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "GroupName",
						"type": "String"
					},
					{
						"name": "ModifiedDate",
						"type": "DateTime"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[Department]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sql7')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BlobPush')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"fileName": {
						"value": "[parameters('BlobPush_properties_typeProperties_fileName')]",
						"type": "Expression"
					},
					"folderPath": "[parameters('BlobPush_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CTCTbl')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"typeProperties": {
					"tableName": "[[dbo].[table_store_ChangeTracking_version]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ControlLookupDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DWTarget",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"typeProperties": {
					"tableName": "[[dbo].[lookuptbl]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DWTarget')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DSTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"typeProperties": {
					"tableName": "[[dbo].[data_source_table]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DWTarget')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DWTarget",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"typeProperties": {
					"tableName": {
						"value": "[[@{item().TableSchema}].[@{item().TableName}]",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DWTarget')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestControlTrack2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDW7",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "TABLE_NAME",
						"type": "varchar"
					},
					{
						"name": "LASTRUN_DTS",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"tableName": "[[staging].[CONTROL_TRACK2]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDW7')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_6m0')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DWTarget",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "Region",
						"type": "nvarchar",
						"precision": 255,
						"scale": 255
					},
					{
						"name": "Country",
						"type": "nvarchar",
						"precision": 255,
						"scale": 255
					},
					{
						"name": "Product Category",
						"type": "nvarchar",
						"precision": 255,
						"scale": 255
					},
					{
						"name": "Campaign ID",
						"type": "float",
						"precision": 15,
						"scale": 255
					},
					{
						"name": "Campaign Name",
						"type": "nvarchar",
						"precision": 255,
						"scale": 255
					},
					{
						"name": "Qualification",
						"type": "nvarchar",
						"precision": 255,
						"scale": 255
					},
					{
						"name": "Status",
						"type": "nvarchar",
						"precision": 255,
						"scale": 255
					},
					{
						"name": "Qualification Number",
						"type": "float",
						"precision": 15,
						"scale": 255
					},
					{
						"name": "Lead Status",
						"type": "nvarchar",
						"precision": 255,
						"scale": 255
					},
					{
						"name": "Leads",
						"type": "float",
						"precision": 15,
						"scale": 255
					},
					{
						"name": "Cost",
						"type": "float",
						"precision": 15,
						"scale": 255
					},
					{
						"name": "Marketing Cost",
						"type": "float",
						"precision": 15,
						"scale": 255
					},
					{
						"name": "Revenue",
						"type": "float",
						"precision": 15,
						"scale": 255
					},
					{
						"name": "Profit",
						"type": "float",
						"precision": 15,
						"scale": 255
					},
					{
						"name": "ROI",
						"type": "float",
						"precision": 15,
						"scale": 255
					},
					{
						"name": "Lead Generation (%)",
						"type": "float",
						"precision": 15,
						"scale": 255
					},
					{
						"name": "Campaign Tactic",
						"type": "nvarchar",
						"precision": 255,
						"scale": 255
					},
					{
						"name": "Customer Segment",
						"type": "nvarchar",
						"precision": 255,
						"scale": 255
					},
					{
						"name": "Revenue Target",
						"type": "float",
						"precision": 15,
						"scale": 255
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "AnalyzeCampaigns"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DWTarget')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_eqo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "polystore",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_fileName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().cw_fileName",
							"type": "Expression"
						},
						"folderPath": "hackathon/VanArsdel",
						"container": "dbricksstore"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/polystore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationSQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SinkTableName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"typeProperties": {
					"tableName": {
						"value": "@dataset().SinkTableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationStagingEmp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "EmpID",
						"type": "Int32"
					},
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "MiddleName",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "OPERATION",
						"type": "String"
					}
				],
				"typeProperties": {
					"tableName": "[[etl].[StagingEmp]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DocumentDbCollection1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CosmosDb1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DocumentDbCollection",
				"typeProperties": {
					"collectionName": "profiles"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CosmosDb1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ETLChangeTrackingVersionDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"typeProperties": {
					"tableName": "[[etl].[Change_Tracking_Version]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FileShare1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "onpremfile",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "FileShare",
				"typeProperties": {
					"fileName": "[parameters('FileShare1_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('FileShare1_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/onpremfile')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/File_Product')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "polystore",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Product2.csv",
						"folderPath": "sampledata",
						"container": "dataflow"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ProductID",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "ProductNumber",
						"type": "String"
					},
					{
						"name": "Color",
						"type": "String"
					},
					{
						"name": "StandardCost",
						"type": "String"
					},
					{
						"name": "ListPrice",
						"type": "String"
					},
					{
						"name": "Size",
						"type": "String"
					},
					{
						"name": "Weight",
						"type": "String"
					},
					{
						"name": "ProductCategoryID",
						"type": "String"
					},
					{
						"name": "ProductModelID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/polystore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/File_Ratings')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "polystore",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ratings_small.csv",
						"container": "dataflow"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "userId",
						"type": "String"
					},
					{
						"name": "movieId",
						"type": "String"
					},
					{
						"name": "rating",
						"type": "String"
					},
					{
						"name": "timestamp",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/polystore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FilesStored')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FilesStored",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": true
					},
					"fileName": {
						"value": "[parameters('FilesStored_properties_typeProperties_fileName')]",
						"type": "Expression"
					},
					"folderPath": "[parameters('FilesStored_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/FilesStored')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GZipBlob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"compression": {
						"type": "GZip",
						"level": "Optimal"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LookupDW')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DWTarget",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"typeProperties": {
					"tableName": "[[dbo].[dummy]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DWTarget')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OnPremDestJSON')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OnPremCSVtoJSON",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "FileShare",
				"typeProperties": {
					"format": {
						"type": "JsonFormat",
						"filePattern": "setOfObjects"
					},
					"fileName": "[parameters('OnPremDestJSON_properties_typeProperties_fileName')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/OnPremCSVtoJSON')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OnPremSqlServerTbl')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServerOnPrem",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "DepartmentID",
						"type": "Int16"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "GroupName",
						"type": "String"
					},
					{
						"name": "ModifiedDate",
						"type": "DateTime"
					}
				],
				"typeProperties": {
					"tableName": "[[HumanResources].[Department]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServerOnPrem')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OnPremTestSCV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OnPremCSVtoJSON",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"fileName": "test.csv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "company",
						"type": "String"
					},
					{
						"name": "country",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/OnPremCSVtoJSON')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SaleTxnText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "teststore",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "[staging].[DLY_SALE_TXN_FCT3].txt",
						"container": "dwoutput"
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\n",
					"escapeChar": "",
					"firstRowAsHeader": true,
					"nullValue": {
						"value": "@concat('')",
						"type": "Expression"
					},
					"quoteChar": ""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/teststore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SaveFile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "polystore",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "dataflow"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/polystore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_6m0')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDW7",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "Region",
						"type": "nvarchar"
					},
					{
						"name": "Country",
						"type": "nvarchar"
					},
					{
						"name": "Product Category",
						"type": "nvarchar"
					},
					{
						"name": "Campaign ID",
						"type": "float"
					},
					{
						"name": "Campaign Name",
						"type": "nvarchar"
					},
					{
						"name": "Qualification",
						"type": "nvarchar"
					},
					{
						"name": "Status",
						"type": "nvarchar"
					},
					{
						"name": "Qualification Number",
						"type": "float"
					},
					{
						"name": "Lead Status",
						"type": "nvarchar"
					},
					{
						"name": "Leads",
						"type": "float"
					},
					{
						"name": "Cost",
						"type": "float"
					},
					{
						"name": "Marketing Cost",
						"type": "float"
					},
					{
						"name": "Revenue",
						"type": "float"
					},
					{
						"name": "Profit",
						"type": "float"
					},
					{
						"name": "ROI",
						"type": "float"
					},
					{
						"name": "Lead Generation (%)",
						"type": "float"
					},
					{
						"name": "Campaign Tactic",
						"type": "nvarchar"
					},
					{
						"name": "Customer Segment",
						"type": "nvarchar"
					},
					{
						"name": "Revenue Target",
						"type": "float"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "AnalyzeCampaigns"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDW7')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_eqo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OnPremSqlServer",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_tableName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"tableName": {
						"value": "@dataset().cw_tableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/OnPremSqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceSQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlDWSaleTxmTbl1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDW7",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "DT_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "MKT_HIER_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "MBR_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PD_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "COST_TP_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DLY_SALE_ID",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "SALE_AMT",
						"type": "decimal",
						"precision": 14,
						"scale": 2
					},
					{
						"name": "SALE_QTY",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "SALE_PRC",
						"type": "decimal",
						"precision": 14,
						"scale": 2
					},
					{
						"name": "COST_AMT",
						"type": "decimal",
						"precision": 14,
						"scale": 7
					},
					{
						"name": "DCN_AMT",
						"type": "decimal",
						"precision": 14,
						"scale": 2
					},
					{
						"name": "DCN_QTY",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "DCN_PRC",
						"type": "decimal",
						"precision": 14,
						"scale": 2
					},
					{
						"name": "CPN_AMT",
						"type": "decimal",
						"precision": 14,
						"scale": 2
					},
					{
						"name": "CPN_QTY",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "CPN_PRC",
						"type": "decimal",
						"precision": 14,
						"scale": 2
					},
					{
						"name": "TXN_NUM",
						"type": "varchar"
					},
					{
						"name": "TCKT_NUM",
						"type": "varchar"
					},
					{
						"name": "CASHIER_NUM",
						"type": "varchar"
					},
					{
						"name": "GNL_MSR",
						"type": "decimal",
						"precision": 15,
						"scale": 5
					},
					{
						"name": "TXN_TP_CODE",
						"type": "varchar"
					},
					{
						"name": "IMPORT_FILE_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SRC_SYS_CD",
						"type": "varchar"
					},
					{
						"name": "NAT_KEY_IN_SRC_SYS",
						"type": "varchar"
					},
					{
						"name": "LOGICAL_DEL_IND",
						"type": "char"
					},
					{
						"name": "CREATION_CYCLE_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "UPDATE_CYCLE_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CREATION_DT_TM",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "UPDATE_DT_TM",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "EFF_DT",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "MD5_VAL",
						"type": "varchar"
					},
					{
						"name": "END_DT",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "BASKET_ID",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"tableName": "[[staging].[DLY_SALE_TXN_FCT3]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDW7')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SrcStagingEmp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "EmpID",
						"type": "Int32"
					},
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "MiddleName",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "Operation",
						"type": "String"
					}
				],
				"typeProperties": {
					"tableName": "[[etl].[StagingEmp]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WatermarkDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"typeProperties": {
					"tableName": "[[dbo].[watermarktable]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dwoutput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "teststore",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "dwoutput"
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\n",
					"escapeChar": "",
					"firstRowAsHeader": true,
					"nullValue": {
						"value": "@concat('')",
						"type": "Expression"
					},
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/teststore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/file_movies')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "polystore",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "movies.csv",
						"container": "dataflow"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "adult",
						"type": "String"
					},
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "release_date",
						"type": "String"
					},
					{
						"name": "revenue",
						"type": "String"
					},
					{
						"name": "runtime",
						"type": "String"
					},
					{
						"name": "tagline",
						"type": "String"
					},
					{
						"name": "title",
						"type": "String"
					},
					{
						"name": "vote_average",
						"type": "String"
					},
					{
						"name": "vote_count",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/polystore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/restsink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"fileName": "[parameters('restsink_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('restsink_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLSForHive')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ADLSForHive_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ADLSForHive_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDW7')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDW7_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDW89')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDW89_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDb1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "CosmosDb",
				"typeProperties": {
					"connectionString": "[parameters('CosmosDb1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DWTarget')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('DWTarget_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Databricks_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://eastus.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('Databricks_LS_accessToken')]"
					},
					"newClusterNodeType": "Standard_DS3_v2",
					"newClusterNumOfWorker": "2",
					"newClusterSparkEnvVars": {
						"PYSPARK_PYTHON": "/databricks/python3/bin/python3"
					},
					"newClusterVersion": "5.4.x-scala2.11"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FilesStored')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('FilesStored_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HDIHiveLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HDInsight",
				"typeProperties": {
					"clusterUri": "https://hdihive7.azurehdinsight.net",
					"userName": "[parameters('HDIHiveLS_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('HDIHiveLS_password')]"
					},
					"isEspEnabled": false,
					"fileSystem": "cont1",
					"linkedServiceName": {
						"referenceName": "ADLSForHive",
						"type": "LinkedServiceReference"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSForHive')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OnPremCSVtoJSON')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('OnPremCSVtoJSON_properties_typeProperties_host')]",
					"userId": "[parameters('OnPremCSVtoJSON_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('OnPremCSVtoJSON_password')]"
					}
				},
				"connectVia": {
					"referenceName": "[parameters('integrationRuntime_SelfIR1')]",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/', parameters('integrationRuntime_SelfIR1'))]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OnPremCsvs')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('OnPremCsvs_properties_typeProperties_host')]",
					"userId": "[parameters('OnPremCsvs_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('OnPremCsvs_password')]"
					}
				},
				"connectVia": {
					"referenceName": "[parameters('integrationRuntime_SelfIR1')]",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/', parameters('integrationRuntime_SelfIR1'))]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OnPremEmpCSVs')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('OnPremEmpCSVs_properties_typeProperties_host')]",
					"userId": "[parameters('OnPremEmpCSVs_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('OnPremEmpCSVs_password')]"
					}
				},
				"connectVia": {
					"referenceName": "[parameters('integrationRuntime_SelfIR1')]",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/', parameters('integrationRuntime_SelfIR1'))]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OnPremSqlServer')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('OnPremSqlServer_connectionString')]",
					"userName": "[parameters('OnPremSqlServer_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('OnPremSqlServer_password')]"
					}
				},
				"connectVia": {
					"referenceName": "[parameters('integrationRuntime_SelfIR1')]",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/', parameters('integrationRuntime_SelfIR1'))]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlDatabase')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('SqlDatabase_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SqlServer1_connectionString')]",
					"userName": "[parameters('SqlServer1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SqlServer1_password')]"
					}
				},
				"connectVia": {
					"referenceName": "[parameters('integrationRuntime_SelfIR1')]",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/', parameters('integrationRuntime_SelfIR1'))]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerOnPrem')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SqlServerOnPrem_connectionString')]",
					"userName": "[parameters('SqlServerOnPrem_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SqlServerOnPrem_password')]"
					}
				},
				"connectVia": {
					"referenceName": "[parameters('integrationRuntime_SelfIR1')]",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/', parameters('integrationRuntime_SelfIR1'))]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/onpremfile')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('onpremfile_properties_typeProperties_host')]",
					"userId": "[parameters('onpremfile_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('onpremfile_password')]"
					}
				},
				"connectVia": {
					"referenceName": "[parameters('integrationRuntime_SelfIR1')]",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/', parameters('integrationRuntime_SelfIR1'))]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/polystore')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('polystore_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sql7')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('sql7_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/teststore')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('teststore_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/', parameters('integrationRuntime_SSISIR'))]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "East US",
						"nodeSize": "Standard_D4_v3",
						"numberOfNodes": 1,
						"maxParallelExecutionsPerNode": 1,
						"vNetProperties": {
							"vNetId": "/subscriptions/c261902e-754a-4493-9b4c-50c04f02fc4b/resourceGroups/sqlmi8/providers/Microsoft.Network/virtualNetworks/vnet-testmi7",
							"subnet": "ssisirvnet"
						}
					},
					"ssisProperties": {
						"catalogInfo": {
							"catalogServerEndpoint": "[parameters('SSISIR_properties_typeProperties_ssisProperties_catalogInfo_catalogServerEndpoint')]",
							"catalogAdminUserName": "[parameters('SSISIR_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminUserName')]",
							"catalogAdminPassword": {
								"type": "SecureString",
								"value": "[parameters('SSISIR_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminPassword')]"
							},
							"catalogPricingTier": "S0"
						},
						"customSetupScriptProperties": {
							"blobContainerUri": "https://polystore.blob.core.windows.net/mystore",
							"sasToken": {
								"type": "SecureString",
								"value": "[parameters('SSISIR_properties_typeProperties_ssisProperties_customSetupScriptProperties_sasToken')]"
							}
						},
						"edition": "Standard",
						"licenseType": "LicenseIncluded"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/', parameters('integrationRuntime_SelfIR1'))]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADF-Join')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "File_Ratings",
								"type": "DatasetReference"
							},
							"name": "Ratings",
							"typeProperties": {}
						},
						{
							"dataset": {
								"referenceName": "file_movies",
								"type": "DatasetReference"
							},
							"name": "Movies",
							"typeProperties": {}
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SaveFile",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Join1"
						},
						{
							"name": "Aggregate1"
						},
						{
							"name": "Origdata"
						},
						{
							"name": "Join2"
						},
						{
							"name": "Select1"
						}
					],
					"script": "\n\nsource(output(\n\t\tuserId as string,\n\t\tmovieId as integer,\n\t\trating as decimal(10,0),\n\t\ttimestamp as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false) ~> Ratings\nsource(output(\n\t\tadult as string,\n\t\tid as integer,\n\t\trelease_date as string,\n\t\trevenue as string,\n\t\truntime as string,\n\t\ttagline as string,\n\t\ttitle as string,\n\t\tvote_average as string,\n\t\tvote_count as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false) ~> Movies\nRatings, Movies join(movieId == id,\n\tjoinType:'inner',\n\tbroadcast: 'none')~> Join1\nJoin1 aggregate(groupBy(titles = title),\n\trating = avg(rating),\n\t\tmovieId = max(movieId)) ~> Aggregate1\nJoin1 select(mapColumn(\n\t\tuserId,\n\t\tmovieId,\n\t\trating,\n\t\ttimestamp,\n\t\tadult,\n\t\tid,\n\t\trelease_date,\n\t\trevenue,\n\t\truntime,\n\t\ttagline,\n\t\ttitle,\n\t\tvote_average,\n\t\tvote_count\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Origdata\nAggregate1, Origdata join(Aggregate1@movieId == Origdata@movieId,\n\tjoinType:'inner',\n\tbroadcast: 'none')~> Join2\nJoin2 select(mapColumn(\n\t\ttitle = titles,\n\t\trating = Aggregate1@rating,\n\t\tmovieId = Aggregate1@movieId,\n\t\tuserId,\n\t\ttimestamp,\n\t\tadult,\n\t\tid,\n\t\trelease_date,\n\t\trevenue,\n\t\truntime,\n\t\ttagline,\n\t\tvote_average,\n\t\tvote_count\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Select1\nSelect1 sink(input(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string,\n\t\tColumn_7 as string,\n\t\tColumn_8 as string,\n\t\tColumn_9 as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/File_Ratings')]",
				"[concat(variables('factoryId'), '/datasets/file_movies')]",
				"[concat(variables('factoryId'), '/datasets/SaveFile')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADF-Pivot')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "File_Product",
								"type": "DatasetReference"
							},
							"name": "sourceProducts",
							"typeProperties": {}
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SaveFile",
								"type": "DatasetReference"
							},
							"name": "Sink"
						}
					],
					"transformations": [
						{
							"name": "Pivot1"
						},
						{
							"name": "DerivedColumn1"
						}
					],
					"script": "\n\nsource(output(\n\t\tProductID as string,\n\t\tName as string,\n\t\tProductNumber as string,\n\t\tColor as string,\n\t\tStandardCost as decimal(10,0),\n\t\tListPrice as string,\n\t\tSize as string,\n\t\tWeight as string,\n\t\tProductCategoryID as string,\n\t\tProductModelID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> sourceProducts\nDerivedColumn1 pivot(groupBy(Size),\n\tpivotBy(Color),\n\tavg = avg(StandardCost),\n\tcolumnNaming: '$N_$V_calculated',\n\tlateral: true) ~> Pivot1\nsourceProducts derive(Size = iif(isNull(Size)||Size=='NULL','NA',Size),\n\t\tColor = iif(isNull(Color)||Color=='NULL','NA',Color)) ~> DerivedColumn1\nPivot1 sink(input(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string,\n\t\tColumn_7 as string,\n\t\tColumn_8 as string,\n\t\tColumn_9 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> Sink"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/File_Product')]",
				"[concat(variables('factoryId'), '/datasets/SaveFile')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADF-Window')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "File_Product",
								"type": "DatasetReference"
							},
							"name": "sourceProduct",
							"typeProperties": {}
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SaveFile",
								"type": "DatasetReference"
							},
							"name": "sink"
						}
					],
					"transformations": [
						{
							"name": "Window1"
						}
					],
					"script": "\n\nsource(output(\n\t\tProductID as string,\n\t\tName as string,\n\t\tProductNumber as string,\n\t\tColor as string,\n\t\tStandardCost as decimal(10,0),\n\t\tListPrice as decimal(10,0),\n\t\tSize as string,\n\t\tWeight as string,\n\t\tProductCategoryID as string,\n\t\tProductModelID as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false) ~> sourceProduct\nsourceProduct window(over(Color),\n\tdesc(StandardCost, false),\n\tdenseRankStandardCost = denseRank(StandardCost)) ~> Window1\nWindow1 sink(input(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string,\n\t\tColumn_7 as string,\n\t\tColumn_8 as string,\n\t\tColumn_9 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> sink"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/File_Product')]",
				"[concat(variables('factoryId'), '/datasets/SaveFile')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline4')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SrcBlob1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "c2s2dest",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SrcBlob1')]",
				"[concat(variables('factoryId'), '/datasets/c2s2dest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cs2c2store')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('cs2c2store_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SrcBlob1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "cs2c2store",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "0_cae34e57a3614ff1adc04cf92932477a_1.json",
						"container": "sajob"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/cs2c2store')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/c2s2dest')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "cs2c2store",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "destfolder"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/cs2c2store')]"
			]
		}
	]
}